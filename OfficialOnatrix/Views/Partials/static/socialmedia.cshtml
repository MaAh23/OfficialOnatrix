@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper

@{
    var rootContents = UmbracoHelper.ContentAtRoot();
    var settings = rootContents?.FirstOrDefault(x => x.ContentType.Alias == "settingsPage") ?? null;
    var officeLocation = settings?.Value<string>("officeLocation") ?? "ej funkar";
    
    var socialMediaPlatforms = settings?.Value<IEnumerable<Umbraco.Cms.Core.Models.Blocks.BlockListItem>>("socialMediaPlatforms") ?? null; 
   
}
 
 
 @if (socialMediaPlatforms != null)
 {
    <div class="social-logo">
			@foreach(var social in socialMediaPlatforms)
            {
                var platformName = social?.Content?.Value<string>("platformName");
                var platformAccountUrl = social?.Content?.Value<string>("platformAccountUrl") ?? "#";
                
                switch(platformName.ToLower()){
                    case "facebook":
                        <a href="@platformAccountUrl" target="_blank"><i class="fa-brands fa-facebook-f"></i></a>
                        break;
                    case "x (formerly twitter)":
                        <a href="@platformAccountUrl" target="_blank"><i class="fa-brands fa-x-twitter"></i></a>
                        break;
                    case "linkedin":
                       <a href="@platformAccountUrl" target="_blank"><i class="fa-brands fa-linkedin"></i></a>
                       break;
                }
            }
    </div>
 }
      


